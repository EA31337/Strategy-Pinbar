/**
 * @file
 * Defines default strategy parameter values for the given timeframe.
 */

// Defines indicator's parameter values for the given pair symbol and timeframe.
struct Indi_Pattern_Params_{{ Timeframe }} : PatternIndiParams {
  Indi_Pattern_Params_{{ Timeframe }}() : PatternIndiParams(indi_pattern_defaults, PERIOD_{{ Timeframe }}) {
    shift = {{ Pattern_Indi_Pattern_Shift | default(0) }};
  }
} indi_pattern_{{ Timeframe | lower }};

// Defines strategy's parameter values for the given pair symbol and timeframe.
struct Stg_Pattern_Params_{{ Timeframe }} : StgParams {
  // Struct constructor.
  Stg_Pattern_Params_{{ Timeframe }}() : StgParams(stg_pattern_defaults) {
    lot_size = {{ Pattern_LotSize | default(0) }};
    signal_open_method = {{ Pattern_SignalOpenMethod | default(0) }};
    signal_open_filter_method = {{ Pattern_SignalOpenFilterMethod | default(1) }};
    signal_open_level = (float){{ Pattern_SignalOpenLevel | default(0) }};
    signal_open_boost = {{ Pattern_SignalOpenBoostMethod | default(0) }};
    signal_close_method = {{ Pattern_SignalCloseMethod | default(0) }};
    signal_close_level = (float){{ Pattern_SignalCloseLevel | default(0) }};
    price_stop_method = {{ Pattern_PriceStopMethod | default(0) }};
    price_stop_level = (float){{ Pattern_SignalCloseLevel | default(1) }};
    tick_filter_method = {{ Pattern_TickFilterMethod  | default(1) }};
    max_spread = {{ Pattern_MaxSpread | default(0) }};
  }
} stg_pattern_{{ Timeframe | lower }};
